managed;
strict ( 2 );
with draft;

define behavior for y_r_travel alias Travel
implementation in class ycl_r_travel_et unique
persistent table ytb_et_travel
draft table ytb_et_traveld
//multiples usuarios
lock master
//controla concurrencias
total etag LocalLastChangedBy
authorization master ( global, instance )
etag master LocalLastChangedAt
{
  create ( precheck );
  update ( precheck );
  delete;

  association _booking { create ( features : instance, authorization : update ); with draft; }

  field ( numbering : managed, readonly ) TravelUuid;

  field ( readonly ) TravelId, OverallStatus, TotalPrice,
  LocalCreatedBy,
  LocalCreatedAt,
  LocalLastChangedBy,
  LocalLastChangedAt;

  field ( features : instance ) BookingFee;

  action ( features : instance, authorization : update ) acceptTravel result [1] $self;
  action ( features : instance, authorization : update ) rejectTravel result [1] $self;
  action ( features : instance, authorization : update ) deductDiscount
    parameter yabstratc result [1] $self;



  internal action reCalcTotalPrice;

  determination setTravelNumber on save { create; }
  determination setStatusOpen on modify { update; }
  determination CalculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  //me bloquea el estado transaccional

  validation validateCustomer on save { create; field CustomerId; }
  validation validateAgency on save { create; field AgencyID; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }

  determine action validateCustomerID { validation validateCustomer; }
  determine action validateAgencID { validation validateAgency; }
  determine action validateDatesRange { validation validateDates; }
  determine action validateCurrencyCodeID { validation validateCurrencyCode; }

  side effects
  {
    field BookingFee affects field TotalPrice;
    determine action validateCustomerID executed on field CustomerId affects messages;
    determine action validateAgencID executed on field AgencyID affects messages;
    determine action validateDatesRange executed on field BeginDate, field EndDate affects messages;
    determine action validateCurrencyCodeID executed on field CurrencyCode affects messages;
  }

  draft action Resume with additional implementation;
  draft action Edit;
  draft action Activate optimized;
  draft action Discard;

  draft determine action Prepare
  {
    validation validateCustomer;
    validation validateAgency;
    validation validateDates;
    validation validateCurrencyCode;
    validation Booking~validateCustomer;
    validation Booking~validateConnection;
    validation Booking~validateCurrencyCode;
    validation Booking~validateFlightPrice;
    validation Booking~validateStatus;
  }

  mapping for ytb_et_travel
    {
      traveluuid         = travel_uuid;
      TravelId           = travel_id;
      AgencyID           = agency_id;
      CustomerId         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      OverallStatus      = overall_status;
      LocalCreatedBy     = local_created_by;
      LocalCreatedAt     = local_created_at;
      LocalLastChangedBy = local_last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
      lastchangedat      = last_changed_at;
    }
}

define behavior for y_r_booking alias Booking
implementation in class zcl_r_booking_et unique
persistent table ytb_et_booking
draft table ytb_et_bookingd
lock dependent by _Travel
authorization dependent by _Travel
//etag master <field_name>
{
  update;
  delete;

  association _Travel { with draft; }
  association _booking_supplement { create ( authorization : update ); with draft; }

  field ( numbering : managed, readonly ) BookingUuid;
  field ( readonly ) TravelUuid, BookingId;
  field ( mandatory ) CustomerId, AirlineID, FlightDate, CurrencyCode;


  determination setBokkingNumber on save { create; }
  determination setBokkingDate on save { create; }
  determination CalculateTotalPrice on modify { create; field FlightPrice, CurrencyCode; }


  validation validateCustomer on save { create; field CustomerId; }
  validation validateConnection on save { create; field AirlineID, ConnectionId, FlightDate; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }
  validation validateFlightPrice on save { create; field FlightPrice; }
  validation validateStatus on save { create; field BookingStatus; }

  determine action validateFlightsCosts { validation validateFlightPrice; }

  side effects
  {
    field FlightPrice affects field _Travel.TotalPrice;
    determine action validateFlightsCosts executed on field FlightPrice affects messages;
  }

  mapping for ytb_et_booking
    {
      BookingUuid        = booking_uuid;
      TravelUuid         = parent_uuid;
      BookingId          = booking_id;
      BookingDate        = booking_date;
      CustomerId         = customer_id;
      AirlineID          = carrier_id;
      ConnectionId       = connection_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      CurrencyCode       = currency_code;
      BookingStatus      = booking_status;
      LocalLastChangedAt = local_last_changed_at;
    }
}

define behavior for y_r_book_suppl alias BookingSupplement
implementation in class zcl_r_bksuppl_et unique
persistent table ytb_et_suppl
draft table ytb_et_suppld
lock dependent by _travel
authorization dependent by _travel
//etag master <field_name>
etag master LocalLastChangedAt
{
  update;
  delete;
  association _travel { with draft; }
  association _booking { with draft; }

  field ( readonly ) BOOKSUPPLUUID;
  field ( readonly ) TravelUuid, BookingUUID, BookingSupplementId, LocalLastChangedAt;


  determination setBookSupllNumber on save { create; }
  determination calculateTotalPrice on modify { create; field Price, CurrencyCode; }

  validation validateSupplement on save { create; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }
  validation validatePrice on save { create; field Price; }

  determine action validateSupplementPrice { validation validatePrice; }

  side effects
  {
    field Price affects field _Travel.TotalPrice;
    determine action validateSupplementPrice executed on field Price affects messages;
  }

  mapping for ytb_et_suppl
    {
      BooksupplUuid       = booksuppluuid;
      TRAVELUUID          = rootuuid;
      BookingUUID         = parentuuid;
      BookingSupplementId = bookingsupplementid;
      SupplementId        = supplementid;
      currencycode        = currencycode;
      Price               = price;
      LocalLastChangedAt  = local_last_changed_at;
    }
}